import java.util.*;
import java.lang.*;
import java.io.*;


 // } Driver Code Ends


class solve{
    public static void solution(String str, String patt){
        int minIndex = Integer.MAX_VALUE; 
       
        // lengths of the two strings 
        int m = str.length(); 
        int n = patt.length(); 
       
        // traverse 'patt' 
        for (int i = 0; i < n; i++) { 
       
            // for each character of 'patt' traverse 'str' 
            for (int j = 0; j < m; j++) { 
       
                // if patt.charAt(i)is found in 'str', check if 
                // it has the minimum index or not. If yes,  
                // then update 'minIndex' and break 
                if (patt.charAt(i)== str.charAt(j) && j < minIndex) { 
                    minIndex = j; 
                    break; 
                } 
            } 
        } 
       
        // print the minimum index character 
        if (minIndex != Integer.MAX_VALUE) 
            System.out.print(str.charAt(minIndex)); 
       
        // if no character of 'patt' is present in 'str' 
        else
            System.out.print("No character present");
    }
}

// { Driver Code Starts.

class GFG {
	public static void main (String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t>0)
		{
		    t--;
		    
		    String s1=sc.next();
		    String s2=sc.next();
		    
		    new solve().solution(s1, s2);
		    System.out.println();
		}
	}
}
  // } Driver Code Ends
